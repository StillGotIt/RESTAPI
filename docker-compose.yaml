services:
  python-app:
    build: .
    container_name: rest_api_app
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
    restart: on-failure:5
    volumes:
      - .:/app
    networks:
      - rest_api_app_network
    ports:
      - "8000:8000"
    command: uvicorn --factory src.api.main:get_app --host 0.0.0.0 --port 8000 --reload

  postgres:
    image: postgres:latest
    container_name: rest_api_postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - rest_api_app_network
    ports:
      - "${POSTGRES_PORT}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10

networks:
  rest_api_app_network:
    driver: bridge

volumes:
  postgres_data:
    driver: local